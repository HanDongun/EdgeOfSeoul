import React, { Component } from 'react';
import { Platform, View, Text, Image, Button } from 'react-native';
import ImagePicker from 'react-native-image-picker';
class App extends React.Component {
  state = {
    photo: null,
  };
 
  
  handleChoosePhoto = () => {
    const options = {
      noData: true,
    };
    state = {
    uri: '' ,
    latitude: '',
    longitude: '',
    latitudeDelta: '',
    longitudeDelta: '',
    time: '',
    images: [],
  }
    
    
    ImagePicker.launchImageLibrary(options, response => {
      const data = new FormData();
     this.setState({
        uri: response.uri,
        latitudeDelta: response.latitudeDelta,
        longitudeDelta: response.latitudeDelta,
        longitude: response.longitude,
        latitude: response.latitude,
        time: response.time,
        //images: this.state.images.map(),
        
     });
     data.append('photo', {
         uri: this.state.uri,
         type: 'image/jpeg',
         name: 'photo',
         longitude: this.state.longitude,
         latitude: this.state.latitude,
     });
     
     const {images} = this.state;
     const newimages = response.map((value)=>({value:value.uri}));
    /*
     let newimage = this.state.image;
     newuri = this.state.uri;
     newimage = [...this.state.image, response.uri];
     this.setState({ image: newimage });
     console.log(this.state.image);
     */

     /*
     fetch('https://26358c78.ngrok.io/spring01/upload', {
        method: 'POST',
        headers: {
            'Content-Type': 'multipart/form-data',
        },
        body: data
      })
      .then((res) => res) 
      .then((resPhoto) => {
        this.setState({
          data: resPhoto.uri,
          latitudeDelta: resPhoto.latitudeDelta,
          longitudeDelta: resPhoto.latitudeDelta,
          longitude: resPhoto.longitude,
          latitude: resPhoto.latitude,
          time: resPhoto.time
        })
      })
      .catch((error) => { 
        console.error(error); 
      });
    });
  {/*onPress={() => this.props.navigation.navigate('Submit', {images: this.state.images})}*/}
  */
  /*
  });}
  render() {
    return (
      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>
        {this.state.uri && (
          <Image
            source={{ uri: this.state.uri }}
            style={{ width: 300, height: 300 }}
          />)}
          <Button title="Choose Photo" onPress={this.handleChoosePhoto.bind(this)} />
          
        <Text>
          {this.state.uri}
        </Text>
        <Text>  
          {this.state.latitude}
        </Text>
        <Text>  
          {this.state.longitude}
        </Text>
        <Text>  
          {this.state.latitudeDelta}
        </Text>
        <Text>  
          {this.state.longitudeDelta}
        </Text>
        <Text>
          {this.state.time}
        </Text>
        <Text>
          
        </Text>
      </View>
    )
  }
}
 
export default App;


ComponentDidMount = () =>{
    RNFetchBlob.fetch('POST', 'https://b660b523.ngrok.io/spring01/up', {
    'Content-Type' : 'multipart/form-data',
  }, [
    { name : this.state.fileName, filename: 'abd.jpg', data: RNFetchBlob.wrap(this.state.uri) }
  ],
  ).then((resp) => resp)
  .then((photo) => {
    this.setState({
        images: resp,
        imagereturn: Photo
    })}
  ).catch((err) => {
    console.log("err");
  })
  }

  RNFetchBlob.fetch('POST', 'https://a89ab0aa.ngrok.io/spring01/up', {
    'Content-Type' : 'multipart/form-data'
  }, this.state.images
  ).then((resp) => resp)
  .then((photo) => {
    this.setState({
        images: resp,
        imagereturn: Photo
    })}
  ).catch((err) => {
    console.log("err");
  })